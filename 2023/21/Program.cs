using System.Collections.Immutable;
using System.Diagnostics;
using System.Text;
using common;

namespace _21;

internal class Program
{

    const StringSplitOptions Tidy = StringSplitOptions.TrimEntries | StringSplitOptions.RemoveEmptyEntries;

    static readonly string xinput = @"
...........
.....###.#.
.###.##..#.
..#.#...#..
....#.#....
.##..S####.
.##..#...#.
.......##..
.##.#.####.
.##..##.##.
...........";

    private static Dictionary<long, long> stepsLongs = new();


    private const char OUTSIDE = '\0';

    private static Grid map;
    const long totalSteps = 26501365L;
    static async Task Main(string[] args)
    {
        var lines = input.Replace("\r", "");
        map = new Grid(lines, OUTSIDE);

        Debug.WriteLine(Part1());
    }

    public static long Part1()
    {
        var startPos = map.Cells.First(c => c.Value == 'S').Pos;
        map[startPos] = '.';
        IEnumerable<VectorRc> GetNeighbors(VectorRc node)
        {
            var current = node;
            var nextSteps = current.NextFour()
                .Select(next => new { next, nextTile = map.GetVirtual(next) })
                .Where(t => t.nextTile != '#')
                .Select(t => t.next)
                .ToList();

            return nextSteps;
        }

        var currentPositions = new HashSet<VectorRc>
        {
            startPos
        };
        var positionsAfterSteps = new List<long>() { };
        stepsLongs[65] = 0;
        stepsLongs[65 + 131] = 0;
        stepsLongs[65 + 131 + 131] = 0;

        var probecount = 131 + 131 + 131;
        for (int i = 0; i <= probecount; i++)
        {
            //Dump(map, currentPositions);
            if (stepsLongs.ContainsKey(i))
            {
                Debug.WriteLine($"After {i} : {currentPositions.Count} {stepsLongs[i] == currentPositions.Count}");
                stepsLongs[i] = currentPositions.Count;
            }

            positionsAfterSteps.Add(currentPositions.Count);


            var nextPositons = new HashSet<VectorRc>();
            foreach (var starter in currentPositions)
            {
                var vectorRcs = GetNeighbors(starter);
                foreach (var neighbor in vectorRcs)
                {
                    nextPositons.Add(neighbor);
                }
            }

            currentPositions = nextPositons;

        }

        Debug.Print("Lagrange result: " + Lagrange(stepsLongs));

        var der = Derivate(positionsAfterSteps);
        var der2 = Derivate(der);

        var der2grouped = der2.Select((x, i) => (value: x, step: i)).GroupBy(x => x.value);
        var topMarker = der2grouped
            .Where(x=>x.Count()>1)
            .FirstOrDefault(x=>x.Last().step - x.SkipLast(1).Last().step==131);
        var period = topMarker.Last().step - topMarker.SkipLast(1).Last().step;
        Debug.WriteLine("Period found: " + period);
        var lastPeriod = der2.LastIndexOf(topMarker.Key);

        var periodDeltas = Enumerable.Range(0, period)
            .Select(i =>
                der[lastPeriod + i - 4 - period] - der[lastPeriod + i - 2*period - 4]).ToList();

        var periodAbsolutes = Enumerable.Range(0, period)
            .Select(i =>
                der[lastPeriod + i]).ToList();

        var lastStep = lastPeriod;
        var lastValue = positionsAfterSteps[lastStep];
        while (lastStep < totalSteps)
        {

            var indexTr = periodAbsolutes.TranslateVirtualIndex(lastStep - 4);
            var toAdd = periodAbsolutes[indexTr];
            var delta = periodDeltas.GetVirtualIndex(lastStep);
            var nextValue = lastValue + toAdd;
            periodAbsolutes[indexTr] = toAdd + delta;
            lastStep++;
            if (positionsAfterSteps.Count > lastStep)
            {
                if (positionsAfterSteps[lastStep] != nextValue)
                {
                    Debug.WriteLine("Error ");
                }
            }
            lastValue = nextValue;
        }


        return lastValue;

        List<long> Derivate(List<long> longs)
        {
            return longs.Skip(1).Select((x, i) => x - longs[i]).ToList();
        }

        double Lagrange(Dictionary<long, long> dictionary)
        {
            // Lagrange interpolation
            var keys = dictionary.Keys.Order();
            var sequenceCounts = keys.Select(k => (X: k, Y: dictionary[k])).ToArray();
            double result = 0;

            for (var i = 0; i < 3; i++)
            {
                // Compute individual terms of formula
                double term = sequenceCounts[i].Y;

                for (var j = 0; j < 3; j++)
                {
                    if (j != i)
                    {
                        term = term * (totalSteps - sequenceCounts[j].X) / (sequenceCounts[i].X - sequenceCounts[j].X);
                    }
                }

                // Add current term to result
                result += term;
            }

            return result;
        }
    }

    private static void Dump(Grid grid, HashSet<VectorRc> currentPositions)
    {
        var minR = currentPositions.Min(x => x.Row) - 1;
        var minC = currentPositions.Min(x => x.Col) - 1;
        var maxR = currentPositions.Max(x => x.Row) + 1;
        var maxC = currentPositions.Max(x => x.Col) + 1;
        var sb = new StringBuilder();
        sb.AppendLine($"({minR},{minC})..({maxR},{maxC})");
        for (int r = minR; r <= maxR; r++)
        {
            for (int c = minC; c <= maxC; c++)
            {
                if (currentPositions.Contains(new(r, c)))
                    sb.Append("O");
                else
                    sb.Append(grid.GetVirtual(r, c));
            }
            sb.AppendLine();
        }
        Debug.WriteLine(sb.ToString());
    }


    private readonly struct Node : IEquatable<Node>
    {
        public readonly ImmutableArray<VectorRc> Steps;
        public Node(IEnumerable<VectorRc> steps)
        {
            Steps = steps.ToImmutableArray();
        }
        public bool Equals(Node other)
        {
            return Steps.SequenceEqual(other.Steps);
        }
        public override int GetHashCode()
        {
            return Steps.Aggregate(0, (acc, val) => (acc << 1) + val.GetHashCode());
        }

        // Generated IEquatable implementation via Quick Actions and Refactorings
        public override bool Equals(object? obj)
        {
            return obj is Node node && Equals(node);
        }
        public static bool operator ==(Node left, Node right)
        {
            return left.Equals(right);
        }
        public static bool operator !=(Node left, Node right)
        {
            return !(left == right);
        }
    }
    private static readonly string input = @"
...................................................................................................................................
.#..#.......#....#.......#.#.....#......#..#.#.........#..............#............#......#........#...##........#..#.....#........
..#......#.###....#........#..#....##..#................#................#...........#..........##.#.#....#....#.....#....#...##.#.
.......#....#..#..#...#........#.....#.............##.....#.............#.#.........##......##.#.......#...#...#...........#.##.##.
....#...#......#.#.##.....#.#..##..#..........#.#..##.....................#............#....##............#......#.........#....#..
......#...#..##...#...#.....#......##.#......#..##.#..##.....................#.......##......##.......##.......#..#.....#.....#....
.#...#...#....#.......#..#.#...##.....#..#..##.....#........................#....#............#....#.....#.....#.#...#...........#.
..#..........#..###............#...###.##..#..#....##.........#...................##.#.......#......#......#.........#.............
..................#.#.#...#..#..#..#.#............##............................#......................###...#.....##.........#....
............#....................#...........#.....................#.#........#..#.....#...#...#......#.#.#...#.......#......##....
..##.#........#..#...#........#..#...#..#....#.#..................................#..#.............#..#.#..#....##...........##.#..
.....##.#......#..###.............#.#....##..................#......#..##...............#....#.....#..........#........#...........
...#.#.......##......##.#.###..##.........#.....#...................#...#................#.##....#..........#.#.......#.#......#...
.#..#.#.....#.....##...#.............#....#...............#...##..........#...............................#......#.....##..........
........#................#..##......#....###..#...........#.#.......#....#..................##...#.................#.#.....#...#...
..#..#......#.#.#.......................#.#...................#.....##.#..............#...........#....#.....#....#...##..#........
...#.#....#.##.......#..........#............#..............#.#.#.##........#.................#.#....#....##....#......#......#....
.#.....#...#.#.#.#......#.#.#......#.#.#............#....#........#........#............#.............#.#..###....#..##.....#......
..#.......#..#....#......#..#....#.................#....#.......#...#....#.....................#.##............##...............##.
.#...##.....#..#..#.....#............#.#..............#.......#.....#..#..#.#..#.........#.##....#...###..###.....#.....#.....##.#.
.....#.....#.#....##.#.....#.....#.....................##.....#.................#..............#.#..#.#......#.......#.....#.......
.....#.#.....#........................................##....#............#......#..............#..................#..##.#.......#..
.............#.#...##..............#....................#..........#..#...#.#.#..............#...#....##.....#.........#....#.##...
.......#.........#....###..............................#......##..........#....#................#....#.#.........#....#.......#....
..#...#....#.........#..............##...........#..#.#....#....#.##....#...........................#..............#....#....###...
.........###.......#...........#....#.........#..#...##...............#........#..##............#.#..#....#...#.#.......#......##..
....#.....##..#................#........................#......#.....#...#.....##..............#......#..###.......#.......#.#.#...
..##.#.....#..................................##.....#...##.....#.##.....#.#.......................#....#....##..........#.....#...
...#.#..#.......#.......#.#...##..................#.##....#....#........#.#......#.#...#...........#......#....#.#..#.....#.#....#.
.#......#........#.#.#.......#...........#....#....#.....#....##............#.....................#...............#....#...#.#.....
...##..............###.#....#..#........#..#..#.......#.##.....#.....#..#......#...##..##............#....##......#.#.##...#.......
........#...#............##............##......#..###.......................##..#.#.....#...........#.#.#.......#.#........#.#.#...
.............##........#....##.................##..#..............................#.#.....#..#...................#...............#.
....#....#.....#.......##.###..........#...##.....##...#........#...................#....#.##.............#.#....#.#.....#.....#...
....#...##.......#...##.................#..##............##....##.....#...........#.#.#................#..#..#...#.............#...
....##...........#...####.........#.............#..##............................#....##.#...#...............#...#...#....#........
...................#...##............#....#.#....#..........#.#......###...................#.#...#........##......#....#.........#.
....#..#...#..##.....#..#.......#...#..#.........#.#..###...........#..#..##...#.......#.....#....#...................#.........#..
..#.........#....#..#.............#...#...#.........#...#..........#...#...#.....##........................#.......##...#........#.
...#.....#...#.....#.............##...........#..#.##....#.#..............###.#.##.....#..........##...............#....#...#..##..
..##..............#.#..........#..##.#.#.......#......##...#.#.....##....#....#.#....#......#.......#..............##.........#..#.
.......###.####................#...........##....#......##...#.............###...........#......#...#.#...........#.........#......
...#.#......#..#............#.#.....#......#...........#...............#.#.....#............#.......#....................#....#....
......#....#..................#...................##..........#....#.#.......................#...................##......#.#..#....
.....##........#..........#.....#.........#....##.....###..........#..#.....#....#.......#....#.....................#.......#......
.#......#...#.............#..............................##..#.#..##....#..............#.#......#............................#.....
......##.....................#..............##..#...................##....#............#...#...#..#..#...............##..........#.
.##.#..#.....#........##.......##.............##.......#.#..........#........##.....#..#.#........#..#.....##........#.#..#........
.#..###...............#...##........##......#.#..##..#....#.......##..#.....##.....#..........#.#..#....#.............#........#...
...#......##..........#..#..##.##.....#....#.#...............##.......#.#.............#.............##..#.#.............#........#.
............................#......#....#...##.......#..##.....#.............##...####..#.....#......#.#.##........................
........#.#.......#...#..#.....#.........#.......#...#....#...#...##...#...#........#..#..........##.#.............................
........................#..........#..#....##........#.........##...........##..........#.#.#.#...#.....#.#..............#...#..#..
...#..#..........##...#...###..............##......#...........##.##..#...#.......#....#......#...........#.#...............#......
...##...........#..........##...#..#.#.......#....#.#.#.......#.......#.....#........#.......#.......#.#........#............#.....
.#............#....##........#........####.#..##......#......#..#.......#........#...#....#......#....#.....#......#...............
.....#...........#..........#.....#..#..#...#...............#.......#.......#.#............#....#...#..............................
.#................#....#..............##...#....#...##.#..##.........................#................##.#........##...............
.#...........#..#.#.....##.........##..#.#.#....#....#......##..........#.....................#.....#.......##...##..............#.
.#........#.##.#..#.#...###.#..........#....#......#..............................#..#.#.##...#..#...#.....#...##...#...#..........
............#.#.....#.####......#......##...#.#.........#..#........#..........#....#.#..##.#.#.#..............#...#..#..#.......#.
........#..#..#.....#..#....#.##...................#...#....##..#.#..#...##..#...#...................#......#...#...#.##...........
.......#............##...#.#....#..#........#.........##...............#...#..#...........#..#...#.......#......#..........#.......
............#...........#.#....#....#..##.........#.#..#................#.#.#.......#..#.....##........................###.........
.....#..#...#.....#.#......#..##......#....##...#..#....#............#.........#......#.....#..#....#.##...........#.##............
.................................................................S.................................................................
........#...............#..........#.#.......##...#...#.......#.#..........#.#.....#.....##.......#.......#...#.......#..#.........
...........#.........#...#.............#......#..#.#.#.#...................#...#...#.......#...#........#.#........#....#...#......
.......##...........#................#...#..#..........#....#.#.#...###...#.............##..#....#.#...#.........#.......###.......
............#...........##..#........#....##.....#............#..........#...#....#..#.......##.......#...#...#......##..#.........
..........#....#.............#...#.....#....#.....#..#..#.......#....#..#.............#..#...........#..##...#....#.#.#............
..............#.......#.......#..#......#..............#...........#.##..###..####...#..................#.#..#..#..#.#..........##.
.#...........#...#.......#..#.....#.....#....##......#..........#..#..#.........#...#..#...........................................
...#...........#.#.#.....#.#.#...##..#...#.....#..........#.....#.......#.........#.....#.#...#.....#......#.........##.........#..
...................##.........#.....#..#...#.##...#..........##........#.................#...#..#....#.......#...............#.....
....................#..##.......#.......#......#..................#.#.....#...####.....#............#...#...#.###................#.
.......................#...#.....#.......#..#..#.......#..............#.....#.#....#..#..#...................#...............#.....
.....#...................#.......#.....##......#..#.#..#...............#...#............#.....#..........#.#..#...#.............#..
...................#.........#..........#.....##..#....#......#........#.....#....##.........#.........#....#..................#...
......#...............#.#.................#.#..##..#....##........#..........#...#...##......#..........#......#........#........#.
..#.#.......................#.....#.#..........####.................#.....#....#...##.#.....##.#...........................##......
.........#........................#...........#...#.##..................#.#.......##...#.#..#..............#...................#.#.
..##.#..#.#..........#..#..#..#....#...........##.#.....##.#..#.#.......................#...#.....#..#.................###..##.....
.#..#.#...............#..........................#.......##..#....#......#.....#...#....#.......#....##..#......................##.
.....#........#.............#..#.........#....#.#.#....##.......#.#.......#............................#..................#.##.#...
....#.##.#..............#......#..#....#...............#...###..........#.#......##.#...#.#.#.#.#........#.........#.....#....##...
.....#.#.#..#.............#..............#...#...#..##..#....#..#.....#.#.....#...#..........##..........#.............#..#..#.....
..#...#..##.....#............#..#.#......#..#....#....#.....................#.....#.................#.##.........#......#..........
.......#..#.##..#..#................##.................#..#........#........#...#.....#...........#.............#....#..........##.
.......#.......................#......#..........##...#.#......#..##........#.....#......#....#................##...#..............
.....#.....##....#............#.#........#............#.#......#.........#....#.............##..#..#...............#...#.#...##.##.
...#....#.##.........#..................#.........#......#.....##.###....#.#...#...#.##...#..................#.....#....#.#...#....
.....##.........#.....#...........#...........#.........#.........#.#..##.#.......##.........##............##.......#....#.........
....................#...........#........#.#....#........#.........#.....#...#...#....#..........#........#.#......#........#......
..............#..#................#.......#....#.#.........#......#.......#.....................................#.....##..#........
......#...#.#...#............................#........#..#...........................#...#.##..........................#.#.........
...........#..##.#...#...#.......................#..#.....................#.............#..#.............#.#.#..#.#..#.............
.......#............................#.....#.#..#.#..#.#..............#.............#..#....................#........#.......#....#.
.#...##..###.#..#....#.....#.#...............#.............#......#....#....#...#........#............#.##.....#....#...#........#.
.....##........#..#......#.#.##...........#............#.......#...#...#............#.....#.................#........#.#..#.#......
...#.....#.#..#......#.##.................#.#..#.......##.........................##...............#...#...#......#......##........
..#....#.......#.#...#....#..###.................#...#...#.##........#..#.#..#...#...#................#.....#.....#.#....#.##..##..
......#.....#.#.#.........................#..#.#...#...#................#....#...#...#..#.................#....##.......#.#..#.....
..#...........#.......#....................#.....#...#.#...............#.#....##...#...............#....#........#.#.##.##..#.#.#..
.#...#.............#..###.......#...........#.......................#....###..#..#..............#....#..#....#......##..#.#........
..................#.............#.................#.........##....##..#.............#...........#...............#...#........#.#...
..#.....###.#.#.....#.#.............#......................#....#.....#............#..............#..#...........#..............#..
.##......#..#..##.......#..##......#...............#...#.............#.##...#...............#........#...#..#.................#....
...#.#...##.#..#...##.#.#..........#...#.........#.#......#..#.......#........#..#...........#.................###.................
.......................##......#..............................#.........#....#..................#..#...#..#.......#.......##.......
....#...#.....#.............#...#.................#.#...#..........##....#..##.................#......#..#............##...........
.........#..........#......#.......#.......................##.##..............................#....##.........#.....###........#.#.
....#.#.#.............#.....#..............#........#.................#..#..............#...........#.....#........#..##...........
......##.#......#....#..#.......###.......#.............#.........#...#....#..#....................#.......#.##.#.##.....##....#...
..#.....#.....##..#.....#...#....#....#.#..............#.#....##.......#.#.#..........................#.#.#.#.##..........#..#.....
...............#.#.###.......###.#...........#........#...###............#..#.......#...##.......##...#........#...................
.....#.........#.#.#..............##.........##............##...#...#...................#..###..........#..#..#.#...#..#...........
........#......#........##.#.....#.#...#....#...#.............#.........#.#.......#.....#.......##...#....#.........#.....#..#.....
.##......#..........#......#............#.....................##...#..............#...............##.............##...#.#..........
...#..#..#.#..#......#.......##.......#.....#................#...................#............#.........#.........#.........##.##..
....#...#........##.#........#..#.#.....#.........................##.#.............#...#.#..........#..#...........................
.........#..#..#.....##.......##......#..#...#..............#....................##...#......##......#...#.#........##.............
..#....#..#..#.#......#......#...................#.##........#.#.....#.............##.....#.......................##...........#...
.#.#..#........#.....#..#...........#.##....................................#...........##..................#...........##.........
..........#..#.............#..#......#..##.##.....#...#.........#.............................#.#...#....................#.....#...
.#..........#..#.#.#.#..#..#..#....#..#.......#........##..................#..#.#....#......#.......#.##.......#.#......###........
............#........#....#..#.#...#..##..#..#..#........................#....##......##........#.....##.....#.......#.......###.#.
...#.#........................#......#..............#...............................#.#..#..###...................#.....#..........
..#....#.....#......#.#.....#..##......#..#..##.....#.....#.....................#............#..#...#.#..##....##..#...#.......#...
.#..#.................................#....#.....#.....................#...#...#.#.........#.#...#..#.....#...................#....
...................................................................................................................................";

}